<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fdz.order.mapper.PaymentRecordMapper">
    <resultMap id="BaseResultMap" type="com.fdz.order.domain.PaymentRecord" extends="baseEntity.base">
        <result column="sn" jdbcType="VARCHAR" property="sn"/>
        <result column="order_sn" jdbcType="VARCHAR" property="orderSn"/>
        <result column="payment_type" jdbcType="TINYINT" property="paymentType"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="surplus_amount" jdbcType="DECIMAL" property="surplusAmount"/>
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime"/>
        <result column="pay_status" jdbcType="TINYINT" property="payStatus"/>
        <result column="pay_sn" jdbcType="VARCHAR" property="paySn"/>
        <result column="pay_route" jdbcType="TINYINT" property="payRoute"/>
        <result column="partner_id" jdbcType="BIGINT" property="partnerId"/>
        <result column="frozen" jdbcType="BIT" property="frozen"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, create_time, modify_time, create_by, modify_by, remark, is_delete, sn, order_sn,
    payment_type, amount, surplus_amount, pay_time, pay_status, pay_sn, pay_route, partner_id, frozen
  </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from payment_record
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from payment_record
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.fdz.order.domain.PaymentRecord">
    insert into payment_record (id, create_time, modify_time, 
      create_by, modify_by, remark, 
      is_delete, sn, order_sn, 
      payment_type, amount, surplus_amount, 
      pay_time, pay_status, pay_sn, 
      pay_route, partner_id, frozen)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{modifyTime,jdbcType=BIGINT}, 
      #{createBy,jdbcType=VARCHAR}, #{modifyBy,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{delete,jdbcType=BIT}, #{sn,jdbcType=VARCHAR}, #{orderSn,jdbcType=VARCHAR}, 
      #{paymentType,jdbcType=TINYINT}, #{amount,jdbcType=DECIMAL}, #{surplusAmount,jdbcType=DECIMAL}, 
      #{payTime,jdbcType=TIMESTAMP}, #{payStatus,jdbcType=TINYINT}, #{paySn,jdbcType=VARCHAR}, 
      #{payRoute,jdbcType=TINYINT}, #{partnerId,jdbcType=BIGINT}, #{frozen})
  </insert>
    <insert id="insertSelective" parameterType="com.fdz.order.domain.PaymentRecord">
        insert into payment_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="modifyBy != null">
                modify_by,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="delete != null">
                is_delete,
            </if>
            <if test="sn != null">
                sn,
            </if>
            <if test="orderSn != null">
                order_sn,
            </if>
            <if test="paymentType != null">
                payment_type,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="surplusAmount != null">
                surplus_amount,
            </if>
            <if test="payTime != null">
                pay_time,
            </if>
            <if test="payStatus != null">
                pay_status,
            </if>
            <if test="paySn != null">
                pay_sn,
            </if>
            <if test="payRoute != null">
                pay_route,
            </if>
            <if test="partnerId != null">
                partner_id,
            </if>
            <if test="frozen != null">
                frozen,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=BIGINT},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="modifyBy != null">
                #{modifyBy,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="delete != null">
                #{delete,jdbcType=BIT},
            </if>
            <if test="sn != null">
                #{sn,jdbcType=VARCHAR},
            </if>
            <if test="orderSn != null">
                #{orderSn,jdbcType=VARCHAR},
            </if>
            <if test="paymentType != null">
                #{paymentType,jdbcType=TINYINT},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="surplusAmount != null">
                #{surplusAmount,jdbcType=DECIMAL},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="payStatus != null">
                #{payStatus,jdbcType=TINYINT},
            </if>
            <if test="paySn != null">
                #{paySn,jdbcType=VARCHAR},
            </if>
            <if test="payRoute != null">
                #{payRoute,jdbcType=TINYINT},
            </if>
            <if test="partnerId != null">
                #{partnerId,jdbcType=BIGINT},
            </if>
            <if test="frozen != null">
                #{frozen},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.fdz.order.domain.PaymentRecord">
        update payment_record
        <set>

            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=BIGINT},
            </if>

            <if test="modifyBy != null">
                modify_by = #{modifyBy,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="delete != null">
                is_delete = #{delete,jdbcType=BIT},
            </if>
            <if test="sn != null">
                sn = #{sn,jdbcType=VARCHAR},
            </if>
            <if test="orderSn != null">
                order_sn = #{orderSn,jdbcType=VARCHAR},
            </if>
            <if test="paymentType != null">
                payment_type = #{paymentType,jdbcType=TINYINT},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="surplusAmount != null">
                surplus_amount = #{surplusAmount,jdbcType=DECIMAL},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=TINYINT},
            </if>
            <if test="paySn != null">
                pay_sn = #{paySn,jdbcType=VARCHAR},
            </if>
            <if test="payRoute != null">
                pay_route = #{payRoute,jdbcType=TINYINT},
            </if>
            <if test="partnerId != null">
                partner_id = #{partnerId,jdbcType=BIGINT},
            </if>
            <if test="frozen !=null">
                frozen = #{frozen},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fdz.order.domain.PaymentRecord">
    update payment_record
    set
      modify_time = #{modifyTime,jdbcType=BIGINT},

      modify_by = #{modifyBy,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_delete = #{delete,jdbcType=BIT},
      sn = #{sn,jdbcType=VARCHAR},
      order_sn = #{orderSn,jdbcType=VARCHAR},
      payment_type = #{paymentType,jdbcType=TINYINT},
      amount = #{amount,jdbcType=DECIMAL},
      surplus_amount = #{surplusAmount,jdbcType=DECIMAL},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_status = #{payStatus,jdbcType=TINYINT},
      pay_sn = #{paySn,jdbcType=VARCHAR},
      pay_route = #{payRoute,jdbcType=TINYINT},
      partner_id = #{partnerId,jdbcType=BIGINT},
      frozen = #{frozen}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="searchPaymentRecordCount" resultType="java.lang.Integer">
        select count(1) from payment_record where is_delete = 0
        <if test="p.partnerId != null">
            and partner_id = #{p.partnerId}
        </if>
        <if test="p.paymentType != null">
            and payment_type=#{p.paymentType}
        </if>
        <if test="p.paySn != null">
            and pay_sn = #{p.paySn}
        </if>
        <if test="p.orderSn != null">
            and order_sn = #{p.orderSn}
        </if>
        <if test="p.payStatus != null">
            and pay_status = #{p.payStatus}
        </if>
        <if test="p.payStartTime != null">
            and pay_time &gt;= #{p.payStartTime}
        </if>
        <if test="p.payEndTime != null">
            and pay_time &lt;= #{p.payEndTime}
        </if>
        <if test="p.paymentTypeList != null">
            and payment_type in (
            <foreach collection="p.paymentTypeList" separator="," item="a" >
                #{a}
            </foreach>
            )
        </if>
    </select>

    <select id="searchPaymentRecord" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from payment_record where is_delete = 0
        <if test="p.partnerId != null">
            and partner_id = #{p.partnerId}
        </if>
        <if test="p.paymentType != null">
            and payment_type=#{p.paymentType}
        </if>
        <if test="p.paySn != null">
            and pay_sn = #{p.paySn}
        </if>
        <if test="p.orderSn != null">
            and order_sn = #{p.orderSn}
        </if>
        <if test="p.payStatus != null">
            and pay_status = #{p.payStatus}
        </if>
        <if test="p.payStartTime != null">
            and pay_time &gt;= #{p.payStartTime}
        </if>
        <if test="p.payEndTime != null">
            and pay_time &lt;= #{p.payEndTime}
        </if>
        <if test="p.paymentTypeList != null">
            and payment_type in (
            <foreach collection="p.paymentTypeList" separator="," item="a" >
                #{a}
            </foreach>
            )
        </if>
        order by id desc limit #{page.start}, #{page.pageSize};
    </select>

</mapper>