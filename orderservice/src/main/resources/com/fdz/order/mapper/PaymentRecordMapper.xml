<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fdz.order.mapper.PaymentRecordMapper">
  <resultMap id="BaseResultMap" type="com.fdz.order.domain.PaymentRecord" extends="baseEntity.base">
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="payment_type" jdbcType="TINYINT" property="paymentType" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="surplus_amount" jdbcType="DECIMAL" property="surplusAmount" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_status" jdbcType="TINYINT" property="payStatus" />
    <result column="pay_sn" jdbcType="VARCHAR" property="paySn" />
    <result column="pay_route" jdbcType="TINYINT" property="payRoute" />
    <result column="partner_id" jdbcType="BIGINT" property="partnerId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, modify_time, create_by, modify_by, remark, is_delete, sn, order_sn, 
    payment_type, amount, surplus_amount, pay_time, pay_status, pay_sn, pay_route, partner_id
  </sql>
  <select id="selectByExample" parameterType="com.fdz.order.domain.PaymentRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from payment_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fdz.order.domain.PaymentRecordExample">
    delete from payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fdz.order.domain.PaymentRecord">
    insert into payment_record (id, create_time, modify_time, 
      create_by, modify_by, remark, 
      is_delete, sn, order_sn, 
      payment_type, amount, surplus_amount, 
      pay_time, pay_status, pay_sn, 
      pay_route, partner_id)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{modifyTime,jdbcType=BIGINT}, 
      #{createBy,jdbcType=VARCHAR}, #{modifyBy,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{delete,jdbcType=BIT}, #{sn,jdbcType=VARCHAR}, #{orderSn,jdbcType=VARCHAR}, 
      #{paymentType,jdbcType=TINYINT}, #{amount,jdbcType=DECIMAL}, #{surplusAmount,jdbcType=DECIMAL}, 
      #{payTime,jdbcType=TIMESTAMP}, #{payStatus,jdbcType=TINYINT}, #{paySn,jdbcType=VARCHAR}, 
      #{payRoute,jdbcType=TINYINT}, #{partnerId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.fdz.order.domain.PaymentRecord">
    insert into payment_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="modifyBy != null">
        modify_by,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="delete != null">
        is_delete,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="surplusAmount != null">
        surplus_amount,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="paySn != null">
        pay_sn,
      </if>
      <if test="payRoute != null">
        pay_route,
      </if>
      <if test="partnerId != null">
        partner_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyBy != null">
        #{modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="delete != null">
        #{delete,jdbcType=BIT},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="surplusAmount != null">
        #{surplusAmount,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="paySn != null">
        #{paySn,jdbcType=VARCHAR},
      </if>
      <if test="payRoute != null">
        #{payRoute,jdbcType=TINYINT},
      </if>
      <if test="partnerId != null">
        #{partnerId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fdz.order.domain.PaymentRecordExample" resultType="java.lang.Integer">
    select count(*) from payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyBy != null">
        modify_by = #{record.modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.delete != null">
        is_delete = #{record.delete,jdbcType=BIT},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.orderSn != null">
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentType != null">
        payment_type = #{record.paymentType,jdbcType=TINYINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.surplusAmount != null">
        surplus_amount = #{record.surplusAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=TINYINT},
      </if>
      <if test="record.paySn != null">
        pay_sn = #{record.paySn,jdbcType=VARCHAR},
      </if>
      <if test="record.payRoute != null">
        pay_route = #{record.payRoute,jdbcType=TINYINT},
      </if>
      <if test="record.partnerId != null">
        partner_id = #{record.partnerId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment_record
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      modify_by = #{record.modifyBy,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_delete = #{record.delete,jdbcType=BIT},
      sn = #{record.sn,jdbcType=VARCHAR},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      payment_type = #{record.paymentType,jdbcType=TINYINT},
      amount = #{record.amount,jdbcType=DECIMAL},
      surplus_amount = #{record.surplusAmount,jdbcType=DECIMAL},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_status = #{record.payStatus,jdbcType=TINYINT},
      pay_sn = #{record.paySn,jdbcType=VARCHAR},
      pay_route = #{record.payRoute,jdbcType=TINYINT},
      partner_id = #{record.partnerId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fdz.order.domain.PaymentRecord">
    update payment_record
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyBy != null">
        modify_by = #{modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="delete != null">
        is_delete = #{delete,jdbcType=BIT},
      </if>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="surplusAmount != null">
        surplus_amount = #{surplusAmount,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="paySn != null">
        pay_sn = #{paySn,jdbcType=VARCHAR},
      </if>
      <if test="payRoute != null">
        pay_route = #{payRoute,jdbcType=TINYINT},
      </if>
      <if test="partnerId != null">
        partner_id = #{partnerId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fdz.order.domain.PaymentRecord">
    update payment_record
    set create_time = #{createTime,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      modify_by = #{modifyBy,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_delete = #{delete,jdbcType=BIT},
      sn = #{sn,jdbcType=VARCHAR},
      order_sn = #{orderSn,jdbcType=VARCHAR},
      payment_type = #{paymentType,jdbcType=TINYINT},
      amount = #{amount,jdbcType=DECIMAL},
      surplus_amount = #{surplusAmount,jdbcType=DECIMAL},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_status = #{payStatus,jdbcType=TINYINT},
      pay_sn = #{paySn,jdbcType=VARCHAR},
      pay_route = #{payRoute,jdbcType=TINYINT},
      partner_id = #{partnerId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.fdz.order.domain.PaymentRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="modify_time" jdbcType="BIGINT" property="modifyTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="modify_by" jdbcType="VARCHAR" property="modifyBy" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_delete" jdbcType="BIT" property="delete" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="payment_type" jdbcType="TINYINT" property="paymentType" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="surplus_amount" jdbcType="DECIMAL" property="surplusAmount" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_status" jdbcType="TINYINT" property="payStatus" />
    <result column="pay_sn" jdbcType="VARCHAR" property="paySn" />
    <result column="pay_route" jdbcType="TINYINT" property="payRoute" />
    <result column="partner_id" jdbcType="BIGINT" property="partnerId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, modify_time, create_by, modify_by, remark, is_delete, sn, order_sn, 
    payment_type, amount, surplus_amount, pay_time, pay_status, pay_sn, pay_route, partner_id
  </sql>
  <select id="selectByExample" parameterType="com.fdz.order.domain.PaymentRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from payment_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fdz.order.domain.PaymentRecordExample">
    delete from payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fdz.order.domain.PaymentRecord">
    insert into payment_record (id, create_time, modify_time, 
      create_by, modify_by, remark, 
      is_delete, sn, order_sn, 
      payment_type, amount, surplus_amount, 
      pay_time, pay_status, pay_sn, 
      pay_route, partner_id)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{modifyTime,jdbcType=BIGINT}, 
      #{createBy,jdbcType=VARCHAR}, #{modifyBy,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{delete,jdbcType=BIT}, #{sn,jdbcType=VARCHAR}, #{orderSn,jdbcType=VARCHAR}, 
      #{paymentType,jdbcType=TINYINT}, #{amount,jdbcType=DECIMAL}, #{surplusAmount,jdbcType=DECIMAL}, 
      #{payTime,jdbcType=TIMESTAMP}, #{payStatus,jdbcType=TINYINT}, #{paySn,jdbcType=VARCHAR}, 
      #{payRoute,jdbcType=TINYINT}, #{partnerId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.fdz.order.domain.PaymentRecord">
    insert into payment_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="modifyBy != null">
        modify_by,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="delete != null">
        is_delete,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="surplusAmount != null">
        surplus_amount,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="paySn != null">
        pay_sn,
      </if>
      <if test="payRoute != null">
        pay_route,
      </if>
      <if test="partnerId != null">
        partner_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyBy != null">
        #{modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="delete != null">
        #{delete,jdbcType=BIT},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="surplusAmount != null">
        #{surplusAmount,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="paySn != null">
        #{paySn,jdbcType=VARCHAR},
      </if>
      <if test="payRoute != null">
        #{payRoute,jdbcType=TINYINT},
      </if>
      <if test="partnerId != null">
        #{partnerId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fdz.order.domain.PaymentRecordExample" resultType="java.lang.Integer">
    select count(*) from payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyBy != null">
        modify_by = #{record.modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.delete != null">
        is_delete = #{record.delete,jdbcType=BIT},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.orderSn != null">
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentType != null">
        payment_type = #{record.paymentType,jdbcType=TINYINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.surplusAmount != null">
        surplus_amount = #{record.surplusAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=TINYINT},
      </if>
      <if test="record.paySn != null">
        pay_sn = #{record.paySn,jdbcType=VARCHAR},
      </if>
      <if test="record.payRoute != null">
        pay_route = #{record.payRoute,jdbcType=TINYINT},
      </if>
      <if test="record.partnerId != null">
        partner_id = #{record.partnerId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment_record
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      modify_by = #{record.modifyBy,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_delete = #{record.delete,jdbcType=BIT},
      sn = #{record.sn,jdbcType=VARCHAR},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      payment_type = #{record.paymentType,jdbcType=TINYINT},
      amount = #{record.amount,jdbcType=DECIMAL},
      surplus_amount = #{record.surplusAmount,jdbcType=DECIMAL},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_status = #{record.payStatus,jdbcType=TINYINT},
      pay_sn = #{record.paySn,jdbcType=VARCHAR},
      pay_route = #{record.payRoute,jdbcType=TINYINT},
      partner_id = #{record.partnerId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fdz.order.domain.PaymentRecord">
    update payment_record
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyBy != null">
        modify_by = #{modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="delete != null">
        is_delete = #{delete,jdbcType=BIT},
      </if>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="surplusAmount != null">
        surplus_amount = #{surplusAmount,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="paySn != null">
        pay_sn = #{paySn,jdbcType=VARCHAR},
      </if>
      <if test="payRoute != null">
        pay_route = #{payRoute,jdbcType=TINYINT},
      </if>
      <if test="partnerId != null">
        partner_id = #{partnerId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fdz.order.domain.PaymentRecord">
    update payment_record
    set create_time = #{createTime,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      modify_by = #{modifyBy,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_delete = #{delete,jdbcType=BIT},
      sn = #{sn,jdbcType=VARCHAR},
      order_sn = #{orderSn,jdbcType=VARCHAR},
      payment_type = #{paymentType,jdbcType=TINYINT},
      amount = #{amount,jdbcType=DECIMAL},
      surplus_amount = #{surplusAmount,jdbcType=DECIMAL},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_status = #{payStatus,jdbcType=TINYINT},
      pay_sn = #{paySn,jdbcType=VARCHAR},
      pay_route = #{payRoute,jdbcType=TINYINT},
      partner_id = #{partnerId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>